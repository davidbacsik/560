knitr::opts_chunk$set(echo = TRUE)
set.seed(1)
X1 <- rnorm(100,mean=10,sd=5)  # 100 random normal quantities, one variable
X2 <- rnorm(100,mean=-3,sd=4)  # another 100 with a different mean and variance
Y <- 1.1 + 0.02*X1 + 0.3*X2 + rnorm(100,mean=0,sd=3)   # note it mostly depends on X2
master_data = data.frame(X1, X2, Y)
library(ggplot2)
x1.plot = ggplot(data = master_data, aes=(x=X1, y=Y)) + geom_point()
master_data = data.frame(X1, X2, Y)
library(ggplot2)
x1.plot = ggplot(master_data, aes=(x=X1, y=Y)) + geom_point()
master_data = data.frame(X1, X2, Y)
library(ggplot2)
x1.plot = ggplot(master_data, aes(x=X1, y=Y)) + geom_point()
x2.plot = ggplot(master_data, aes(x=X2, y=Y)) + geom_point()
master_data = data.frame(X1, X2, Y)
library(ggplot2)
x1.plot = ggplot(master_data, aes(x=X1, y=Y)) + geom_point()
x2.plot = ggplot(master_data, aes(x=X2, y=Y)) + geom_point()
x1.plot
x2.plot
X <- cbind(X1,X2)        # X1, X2, side-by-side become columns of "design matrix"
rr <- lsfit(X,Y)
ls.print(rr)             # what did it conclude?  Was there a nonzero slope in X1?
Y <- 1.1 + 0.12*X1 - 0.3*X1^2 + rnorm(100,mean=0,sd=3)  # a quadratic with noise
master_data.1 = data.frame(X1, Y)
library(ggplot2)
x1.plot = ggplot(master_data.1, aes(x=X1, y=Y)) + geom_point()
x1.plot
X <- cbind(X1,X1^2)        # X1, X2, side-by-side become columns of "design matrix"
rr <- lsfit(X,Y)
ls.print(rr)
X.sq = X1^2
X <- cbind(X1,X.sq)        # X1, X2, side-by-side become columns of "design matrix"
rr <- lsfit(X,Y)
ls.print(rr)
fit <- lm( Y ~ X1 + X2 )
summary(fit)		# show results
layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page
plot(fit)
a <- read.table("http://www.cs.washington.edu/homes/suinlee/genome560/data/cats.txt")
a <- read.table("http://www.cs.washington.edu/homes/suinlee/genome560/data/cats.txt")
a <- read.table("https://www.cs.washington.edu/homes/suinlee/genome560/data/cats.txt")
X <- a[1:17,2]               # X is the ages (in days) of sampling for that cat
cat.1 = data.frame(X,Y)
X <- a[1:17,2]               # X is the ages (in days) of sampling for that cat
X
# (you could use some other cat)
Y <- a[1:17,3]               # Y is the fraction of cells of that cell type
Y
cat.1 = data.frame(X,Y)
cat.1
cat.1.plot = ggplot(cat.1, aes(x=X,y=Y)) + geom_point()
cat.1.plot
rr <- lsfit(cat.1$X,cat.1Y)
rr <- lsfit(cat.1$X,cat.1$Y)
ls.print(rr)
cat.1.plot = cat.1.plot + geom_abline(slope=-0.3031, intercept=51.6283)
cat.1.plot
